package Dyatel::Model::DB;

use strict;
use base 'Catalyst::Model::DBIC::Schema';
use Log::Any qw($log);

__PACKAGE__->config(
    schema_class => 'Dyatel::Schema',
    
    connect_info => {
        dsn => 'dbi:Pg:dbname=dyatel',
        user => 'dyatel',
        password => '',
    }
);

sub xsearch
{
	my $self = shift;
	my($q, $opts) = @_;
	my $storage = $self->storage;
	return $storage->dbh_do(sub {
		my $self = shift;
		my $dbh = shift;
		my @selects;
		push @selects, q"SELECT 'users' AS src, num, descr, 'local' AS numkind FROM users WHERE descr ILIKE $1 OR num ILIKE $1 OR alias ILIKE $1 OR login ILIKE $1 OR dispname ILIKE $1" if $opts->{loc};
		push @selects, q"SELECT 'users' AS src, m.val AS num, u.descr, LOWER(COALESCE(k.tag, k.descr)) AS numkind FROM users u INNER JOIN morenums m ON m.uid = u.id INNER JOIN numkinds k ON k.id = m.numkind WHERE u.descr ILIKE $1 OR num ILIKE $1 OR alias ILIKE $1 OR login ILIKE $1 OR dispname ILIKE $1 OR m.val ILIKE $1 OR m.descr ILIKE $1" if $opts->{loc};
		push @selects, q"SELECT 'cpb' AS src, p.num, p.descr, LOWER(COALESCE(k.tag, k.descr)) AS numkind FROM phonebook p INNER JOIN numkinds k ON k.id = p.numkind WHERE owner IS NULL AND (p.descr ILIKE $1 OR p.num ILIKE $1)" if $opts->{com};
		push @selects, q"SELECT 'ppb' AS src, p.num, p.descr, LOWER(COALESCE(k.tag, k.descr)) AS numkind FROM phonebook p INNER JOIN numkinds k ON k.id = p.numkind WHERE owner = ".$opts->{uid}.q" AND (p.descr ILIKE $1 OR p.num ILIKE $1)" if $opts->{pvt};
		return [ ] unless @selects;
		my $sql = join(' UNION ', @selects)." ORDER BY num;";
    $log->debug("Search SQL: $sql, arg: <<$q>>");
		my $sth = $dbh->prepare($sql);
		$sth->execute("%$q%");
		my $r = $sth->fetchall_arrayref( { } ); # note empty hash ref - makes array of hashes
		return $r;
	});
}


=head1 NAME

Dyatel::Model::DB - Catalyst DBIC Schema Model

=head1 SYNOPSIS

See L<Dyatel>

=head1 DESCRIPTION

L<Catalyst::Model::DBIC::Schema> Model using schema L<Dyatel::Schema>

=head1 GENERATED BY

Catalyst::Helper::Model::DBIC::Schema - 0.61

=head1 AUTHOR

Vasily i. Redkin

=head1 LICENSE

This library is free software, you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut

1;
