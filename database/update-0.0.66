BEGIN;

-- fix default time value
CREATE OR REPLACE FUNCTION scheduled_mode(ts TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, tz TEXT DEFAULT current_setting('TIMEZONE')) RETURNS TEXT AS $$
DECLARE
	wts TIMESTAMP WITH TIME ZONE;
	d DATE;
	t TIME WITHOUT TIME ZONE;
	wd SMALLINT;
	r TEXT;
BEGIN
	wts := ts AT TIME ZONE tz;
	d := wts;
	t := wts;
	wd := EXTRACT(dow FROM d)::SMALLINT;
	-- RAISE NOTICE 'wts: %, d: %, t: %, wd: %', wts, d, t, wd;
	SELECT mode INTO r FROM schedule s WHERE wd = ANY (s.dow)
		AND t >= s.tstart AND t < s.tend
		AND (mday IS NULL OR
			(d >= mday AND d < mday + days)) 
		ORDER BY prio DESC, mday DESC, tstart DESC LIMIT 1;
	RETURN r;
END;
$$ LANGUAGE PlPgSQL;

-- fix insert
CREATE OR REPLACE FUNCTION directory_uniq_prefix_trigger() RETURNS TRIGGER AS $$
DECLARE
        cflct TEXT;
BEGIN
	IF TG_OP = 'UPDATE' THEN
		IF NEW.num <> OLD.num THEN
			cflct := array_to_string(directory_check_num(NEW.num), ', ');
		END IF;
	ELSE
		cflct := array_to_string(directory_check_num(NEW.num), ', ');
	END IF;
        IF LENGTH(cflct) <> 0 THEN
                RAISE EXCEPTION 'Conflict: %', cflct;
        END IF;
        RETURN NEW;
END;
$$ LANGUAGE PlPgSQL;

COMMIT;

-- vim: ft=sql

