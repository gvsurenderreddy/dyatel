
-- not in transaction!
ALTER TYPE CALLDISTRIBUTION ADD VALUE 'uniform';
ALTER TYPE CALLDISTRIBUTION ADD VALUE 'queue';

BEGIN;

ALTER TABLE callgrpmembers ADD maxcall INTEGER NOT NULL DEFAULT 8;
ALTER TABLE callgrpmembers ADD keepring BOOLEAN NOT NULL DEFAULT FALSE;

CREATE OR REPLACE FUNCTION callgroups_route(called_arg TEXT)
	RETURNS TABLE(key TEXT, value TEXT) AS $$
DECLARE
	g RECORD;
	t RECORD;
	res HSTORE;
	cntr INTEGER;
	cntr2 INTEGER;
	cntr3 INTEGER;
	nextcallto TEXT;
BEGIN
	-- NOTE: Supported distribution schemes: parallel, linear, queue --
	SELECT * INTO g FROM callgroups WHERE num = called_arg;
	IF NOT FOUND THEN
		RETURN;
	END IF;
	IF g.distr = 'queue' AND g.queue IS NOT NULL THEN
		key := 'location';
		value := 'queue/' || g.queue::TEXT;
		RETURN NEXT;
		RETURN;
	END IF;

	res := 'location => fork';
	cntr := 0;

	IF LENGTH(g.ringback) > 0 THEN -- Fake ringback
		cntr := cntr + 1;
		res := res || hstore('callto.' || cntr, g.ringback);
		res := res || hstore('callto.' || cntr || '.fork.calltype', 'persistent');
		res := res || hstore('callto.' || cntr || '.fork.autoring', 'true');
		res := res || hstore('callto.' || cntr || '.fork.automessage', 'call.progress');
	END IF;

	cntr2 := cntr;
	FOR t IN SELECT m.* FROM callgrpmembers m LEFT JOIN users u ON u.num = m.num WHERE m.grp = g.id AND m.enabled
			AND 0 = (SELECT COUNT(*) FROM linetracker WHERE uid = u.id) ORDER BY ord LOOP
		IF nextcallto IS NOT NULL AND cntr2 <> cntr THEN
			cntr2 := cntr2 + 1;
			res := res || hstore('callto.' || cntr2, nextcallto);
			nextcallto := NULL;
		END IF;
		cntr3 := cntr2;
		SELECT * INTO res, cntr2 FROM regs_route_part(t.num, res, cntr2);
		IF g.distr = 'linear' THEN
			IF cntr3 = cntr2 THEN
				res := delete(res, 'callto.' || cntr2);
				cntr2 := cntr2 - 1;
			ELSE
				nextcallto := CASE WHEN t.keepring THEN '|next=' ELSE '|drop=' END || (1000 * t.maxcall)::TEXT;
			END IF;
		END IF;
	END LOOP;

	IF cntr2 <> cntr THEN -- Members found
		cntr := cntr2;
		IF LENGTH(g.exitpos) > 0 THEN -- Exit position
			cntr := cntr + 1;
			IF g.maxcall > 0 THEN
				res := res || hstore('callto.' || cntr, '|exec=' || g.maxcall);
			ELSE
				res := res || hstore('callto.' || cntr, '|exec');
			END IF;
			cntr := cntr + 1;
			res := res || hstore('callto.' || cntr, 'lateroute/' || g.exitpos);
		END IF;
	ELSE -- No members found
		IF LENGTH(g.exitpos) > 0 THEN
			res := 'location => lateroute/' || g.exitpos;
		ELSE
			res := 'location => "", error => "offline"';
		END IF;
	END IF;

	RETURN QUERY SELECT * FROM each(res);
END;
$$ LANGUAGE PlPgSQL;

COMMIT;
-- vim: ft=sql

